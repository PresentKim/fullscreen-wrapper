{"version":3,"file":"fullscreen.js","sources":["../src/fullscreen.ts"],"sourcesContent":["const document = window.document as any;\n\nclass FullScreen {\n  /**\n   * Returns true if document has the ability to display elements fullscreen and fullscreen is supported, or false otherwise.\n   * @see Document.fullscreenEnabled\n   */\n  public isEnabled: boolean;\n\n  /** @inner Name of element property */\n  public elementProperty: string;\n\n  /** @inner Name of request method */\n  public requestMethod: string;\n\n  /** @inner Name of exit method */\n  public exitMethod: string;\n\n  /** @inner Name of change event */\n  public changeEvent: string;\n\n  /** @inner Name of error event */\n  public errorEvent: string;\n\n  /** @inner */\n  constructor() {\n    this.isEnabled = false;\n    this.elementProperty = '';\n    this.requestMethod = '';\n    this.exitMethod = '';\n    this.changeEvent = '';\n    this.errorEvent = '';\n  }\n\n  /** Returns true if document has fullscreen element, or false otherwise. */\n  get isFullscreen(): boolean {\n    return Boolean(this.element);\n  }\n\n  /**\n   * Returns document's fullscreen element.\n   * @see Document.fullscreenElement\n   */\n  get element(): Element | undefined {\n    return document[this.elementProperty];\n  }\n\n  /**\n   * Displays element fullscreen and resolves promise when done.\n   * @see Element.requestFullscreen\n   */\n  request(element: Element = document.documentElement): boolean {\n    if (!(element as any)[this.requestMethod]) return false;\n\n    (element as any)[this.requestMethod]();\n    return true;\n  }\n\n  /**\n   * Stops document's fullscreen element from being displayed fullscreen and resolves promise when done.\n   * @see Element.exitFullscreen\n   */\n  exit(): boolean {\n    if (!document[this.exitMethod]) return false;\n\n    document[this.exitMethod]();\n    return true;\n  }\n\n  /** Appends an event listener for \"fullscreenchange\" event. The callback argument sets the callback that will be invoked when the event is dispatched. */\n  onChange(callback: (this: Document, ev: Event) => any): boolean {\n    if (!this.isEnabled) return false;\n\n    document.addEventListener(this.changeEvent, callback, false);\n    return true;\n  }\n\n  /** Appends an event listener for \"fullscreenerror\" event. The callback argument sets the callback that will be invoked when the event is dispatched. */\n  onError(callback: (this: Document, ev: Event) => any): boolean {\n    if (!this.isEnabled) return false;\n\n    document.addEventListener(this.errorEvent, callback, false);\n    return true;\n  }\n\n  /** Toggle fullscreen */\n  toggle(element: Element = document.documentElement): boolean {\n    return this.isFullscreen ? this.exit() : this.request(element);\n  }\n}\n\nconst fullscreen = new FullScreen();\nif (document.fullscreenEnabled) {\n  fullscreen.isEnabled = document.fullscreenEnabled;\n  fullscreen.elementProperty = 'fullscreenElement';\n  fullscreen.requestMethod = 'requestFullscreen';\n  fullscreen.exitMethod = 'exitFullscreen';\n  fullscreen.changeEvent = 'fullscreenchange';\n  fullscreen.errorEvent = 'fullscreenerror';\n} else if (document.webkitFullscreenEnabled || document.webkitCancelFullScreen) {\n  fullscreen.isEnabled = document.fullscreenEnabled || Boolean(document.webkitCancelFullScreen);\n  fullscreen.requestMethod = 'webkitRequestFullScreen';\n  fullscreen.changeEvent = 'webkitfullscreenchange';\n  fullscreen.errorEvent = 'webkitfullscreenerror';\n  if (document.webkitFullscreenEnabled) {\n    fullscreen.elementProperty = 'webkitFullscreenElement';\n    fullscreen.exitMethod = 'webkitExitFullscreen';\n  } else {\n    fullscreen.elementProperty = 'webkitCurrentFullScreenElement';\n    fullscreen.exitMethod = 'webkitCancelFullScreen';\n  }\n} else if (document.msFullscreenEnabled) {\n  fullscreen.isEnabled = document.msFullscreenEnabled;\n  fullscreen.elementProperty = 'msFullscreenElement';\n  fullscreen.requestMethod = 'msRequestFullscreen';\n  fullscreen.exitMethod = 'msExitFullscreen';\n  fullscreen.changeEvent = 'MSFullscreenChange';\n  fullscreen.errorEvent = 'MSFullscreenError';\n} else if (document.mozFullScreenEnabled) {\n  fullscreen.isEnabled = document.mozFullScreenEnabled;\n  fullscreen.elementProperty = 'mozFullScreenElement';\n  fullscreen.requestMethod = 'mozRequestFullScreen';\n  fullscreen.exitMethod = 'mozCancelFullScreen';\n  fullscreen.changeEvent = 'mozfullscreenchange';\n  fullscreen.errorEvent = 'mozfullscreenerror';\n}\n\nexport default fullscreen;\n"],"names":[],"mappings":"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"}